# You must change these to your own details.
[package]
name = "rust-webpack-template"
description = "My super awesome Rust, WebAssembly, and Webpack project!"
version = "0.1.0"
authors = ["You <you@example.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
wasm-bindgen = "0.2.90"
console_error_panic_hook = "0.1.7"
futures = "0.3.30"
wasm-bindgen-futures = "0.4.40"
serde = { version = "1.0.195", features = ["derive"] }
gloo-utils = { version = "0.2.0", features = ["serde"] }
anyhow = "1.0.79"
async-trait = "0.1.77"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.67"
features = [
    "console",
    "Window",
    "Document",
    "Element",
    "Response",
    "Performance",
    "HtmlCanvasElement",
    "HtmlImageElement",
    "CanvasRenderingContext2d",
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.3.40"
js-sys = "0.3.22"
